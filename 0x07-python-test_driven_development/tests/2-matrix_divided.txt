The ``2-matrix_divided`` module
  =========================

using ``matrix_divided``
  --------------------

First import metho form the module
      >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Success case:

Test for module docstring:
    >>> m = __import__("2-matrix_divided").__doc__ 
    >>> len(m) > 1
    True

Test for function docstring:
    >>> m = __import__("2-matrix_divided").matrix_divided.__doc__ 
    >>> len(m) > 1
    True

Test for signed and unsigned integer and floats:
    >>> matrix = [[1, 2.0, 30],[4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 10.0], [1.33, 1.67, 2.0]]
    >>> matrix = [[1, 2.0, 30],[9, 6.5, 6]] 
    >>> matrix_divided(matrix, -2) 
    [[-0.5, -1.0, -15.0], [-4.5, -3.25, -3.0]]
    >>> matrix = [[1.3, 4.9],[4.5, 7.8]]    
    >>> matrix_divided(matrix, -2.4)     
    [[-0.54, -2.04], [-1.88, -3.25]]
  
Test for division with infinity in numerator:
    >>> matrix = [[2, 3], [5, float('inf')]]    
    >>> matrix_divided(matrix, 4)
    [[0.5, 0.75], [1.25, inf]]

Test for division with infinity in denomenator:
    >>> matrix = [[2, 3], [5, 8]]               
    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

Falied case:

Test for different data types:
    >>> matrix = [[1, 2.0, 30],[9, 6.5, True]] 
    >>> matrix_divided(matrix, 1) 
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[10, 20, 0],["9", 6.5, 9]]    
    >>> matrix_divided(matrix, 2) 
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[10, 20, 0],(3, 5, 9)]     
    >>> matrix_divided(matrix, 2)        
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = "hello world"
    >>> matrix_divided(matrix, 8)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = ([10, 20, 0],[4, 6.5, 9]) 
    >>> matrix_divided(matrix, 8)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[10, 20, 0],{4, 6.5, 9}]
    >>> matrix_divided(matrix, 8)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = {4, 6, 7}                
    >>> matrix_divided(matrix, 2) 
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test for no argumnet:
    >>> matrix_divided(None, 2)   
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = []
    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
     >>> matrix = [[], [], []]
    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
Test for extra argumnet:
    >>> matrix = [[2, 3], [5, 7]]
    >>> matrix_divided(matrix, 4, 4) 
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Test for too few argumnet:
    >>> matrix = [[2, 3], [5, 7]]    
    >>> matrix_divided(matrix)    
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test div as 0 and non int and float:
    >>> matrix = [[2, 3], [5, 7]]
    >>> matrix_divided(matrix, 0) 
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
    >>> matrix = [[2, 3], [5, 7]] 
    >>> matrix_divided(matrix, '4') 
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test for different size of list:
    >>> matrix = [[2, 3], [5, 7, 8]]
    >>> matrix_divided(matrix, 4)    
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size
